docker run -d --hostname rabbitmq --name rabbitmq -p 15672:15672 -p 5671:5671 -p 5672:5672 rabbitmq:3-management

docker run --name mysqldb -p 3306:3306 -e MYSQL_DATABASE=pageviewservice -e MYSQL_ALLOW_EMPTY_PASSWORD=yes -d mysql

# does not work
docker run --name pageviewservice -p 8081:8081 springframeworkguru/pageviewservice

## does not work
docker run --name pageviewservice -p 8081:8081 -e SPRING_DATASOURCE_URL=jdbc:mysql://127.0.0.1:3306/pageviewservice \
-e SPRING_PROFILES_ACTIVE=mysql springframeworkguru/pageviewservice

docker run --name pageviewservice -p 8081:8081 ^
--link rabbitmq:rabbitmq ^
--link mysqldb:mysqldb ^
-e SPRING_DATASOURCE_URL=jdbc:mysql://mysqldb:3306/pageviewservice?useSSL=false^&verifyServerCertificate=false ^
-e SPRING_PROFILES_ACTIVE=mysql ^
-e SPRING_RABBITMQ_HOST=rabbitmq ^
springframeworkguru/pageviewservice

docker run --name pageviewservice -p 8081:8081 \
--link rabbitmq:rabbitmq \
--link mysqldb:mysqldb
-e SPRING_DATASOURCE_URL=jdbc:mysql://mysqldb:3306/pageviewservice?useSSL=false^&verifyServerCertificate=false \
-e SPRING_PROFILES_ACTIVE=mysql \
-e SPRING_RABBITMQ_HOST=rabbitmq \
springframeworkguru/pageviewservice

docker run --name pageviewservice -p 8081:8081 ^
--link rabbitmq:rabbitmq ^
--link mysqldb:mysqldb ^
-e SPRING_DATASOURCE_URL=jdbc:mysql://mysqldb:3306/pageviewservice?useSSL=false^&verifyServerCertificate=false ^
-e SPRING_PROFILES_ACTIVE=mysql ^
-e SPRING_RABBITMQ_HOST=rabbitmq ^
mostafamahdijoo/pageviewservice


# Example MVN command for CI
mvn clean package verify docker:push

# start docker compose in background
docker-compose up -d

# stop docker-compose
docker-compose down

# Create portainer service in docker swarm
docker service create ^
--name portainer ^
--publish 9000:9000 ^
--constraint 'node.role == manager' ^
--mount type=bind,src=/var/run/docker.sock,dst=/var/run/docker.sock ^
portainer/portainer ^
-H unix:///var/run/docker.sock

## ssh to node on DigitalOcean
ssh -i "~/.ssh/<your key here>" root@<your node ip here>

# Init Docker Swarm
docker swarm init

## Create portainer service in docker swarm on port 80
docker service create ^
--name portainer ^
--publish 80:9000 ^
--constraint 'node.role == manager' ^
--mount type=bind,src=/var/run/docker.sock,dst=/var/run/docker.sock ^
portainer/portainer ^
-H unix:///var/run/docker.sock

## force new quarum
docker swarm init --force-new-cluster --advertise-addr node3:2377